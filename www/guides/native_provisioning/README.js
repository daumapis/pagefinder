Ext.data.JsonP.native_provisioning({"guide":"<h1 id='native_provisioning-section-creating-an-apple-ios-development-certificate-in-p12-format'>Creating an Apple iOS Development Certificate in P12 Format</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/native_provisioning-section-on-mac-os'>On Mac OS</a></li>\n<li><a href='#!/guide/native_provisioning-section-on-windows'>On Windows</a></li>\n</ol>\n</div>\n\n<p>Sencha SDK tools require a P12 certificate to package iOS applications.</p>\n\n<p>Obtaining a P12 certificate is a two step process:</p>\n\n<ol>\n<li>Create a development certificate on the Apple iOS provisioning portal.</li>\n<li>Convert the development certificate to a P12 certificate.</li>\n</ol>\n\n\n<h2 id='native_provisioning-section-on-mac-os'>On Mac OS</h2>\n\n<h3 id='native_provisioning-section-creating-a-developer-certificate-on-the-ios-provisioning-portal'>Creating a Developer Certificate on the iOS Provisioning Portal</h3>\n\n<p>If you have not created a development certificate on the Apple iOS Provisioning Portal,\nfollow these steps to create the certificate:</p>\n\n<ol>\n<li>Navigate to the Certificates section of the portal.</li>\n<li>Follow the steps on the portal to create a development certificate:\nHow to create a development certificate:\n\n<ol>\n<li>Generate a Certificate Signing Request (CSR) with a public key:\n\n<ul>\n<li>In your Applications folder, open the Utilities folder and launch Keychain Access.</li>\n<li>Choose Keychain Access > Certificate Assistant > Request a Certificate from a Certificate Authority.</li>\n<li>In the Certificate Information window, enter or select the following information:\n\n<ul>\n<li>In the User Email Address field, enter your email address</li>\n<li>In the Common Name field, enter your name</li>\n<li>In the Request is group, select the Saved to disk option</li>\n</ul>\n</li>\n<li>Click Continue.</li>\n<li>The Certificate Assistant saves a Certificate Signing Request (CSR) file to your Desktop.</li>\n<li>The public/private key pair will be generated when you create the Certificate Signing Request (CSR) if you use the Key Chain Assistant to create the CSR.</li>\n</ul>\n</li>\n<li>Submit the CSR through the Provisioning Portal.\n\n<ul>\n<li>Click the Development tab</li>\n<li>Upload the certificate by choosing the file</li>\n<li>Click Submit</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>After the certificate is generated, download the certificate and import it into Keychain:\n\n<ul>\n<li>Open Keychain Access application (in the Applications/Utilities folder)</li>\n<li>Select File > Import and navigate to the certificate (.cer file) you just downloaded from the Apple iOS Provisioning Portal</li>\n</ul>\n</li>\n</ol>\n\n\n<h3 id='native_provisioning-section-exporting-developer-certificate-into-p12-format-from-keychain'>Exporting Developer Certificate into P12 Format from Keychain</h3>\n\n<p>Once the developer certificate is imported into Keychain, you can export it to the P12 format:</p>\n\n<ol>\n<li>Open Keychain Access application (in the Applications/Utilities folder).</li>\n<li>Select the Keys Category.</li>\n<li>Select the private key associated with your Apple iOS development certificate. The private key has the following name pattern: iPhone Developer: <code>&lt;First Name&gt;</code> <code>&lt;Last Name&gt;</code> public key reference.</li>\n<li>Select File > Export Items and save the key in the P12 format.</li>\n<li>This file is what you specificy in the Sencha SDK packager config file for the \"certificatePath\" variable.</li>\n</ol>\n\n\n<h2 id='native_provisioning-section-on-windows'>On Windows</h2>\n\n<p>Prerequisites:</p>\n\n<ul>\n<li>Install Open SSL (http://www.openssl.org/related/binaries.html).</li>\n<li>Open SSL requires Visual C++ 2008 Redistributables (VCRedist). Follow the instructions on the above web page to download and install VCRedist if you do not have that on your system.</li>\n</ul>\n\n\n<h3 id='native_provisioning-section-creating-a-developer-certificate-on-ios-provisioning-portal'>Creating a Developer Certificate on iOS Provisioning Portal</h3>\n\n<p>If you have not created a development certificate on the Apple iOS Provisioning Portal,\nfollow the steps outlined below to create the certificate:</p>\n\n<ol>\n<li>Open a command prompt window.</li>\n<li>Change directory to the OpenSSL bin directory.</li>\n<li>Create a private key using openssl genrsa command:<br><code>openssl genrsa –out myprivatekey.key 2048</code>\nNote: Please keep this myprivatekey.key file. You need this to generate the P12 certificate.</li>\n<li>Create a cerfiticate signing request (csr) using the following command:<br></li>\n</ol>\n\n\n<pre>   openssl req –new –key myprivatekey.key –out CertificateSigningRequest.certSigningRequest –sub \"/\n   emailAddress=yourAddress@example.com, CN=John Doe, C=US\"\n   </pre>\n\n\n<p>   Replace the email address, CN (certificate name), and C (country) with your own values.\n5. Upload this CSR to the Apple iOS Provisioning Portal, in the Certificates section. You will need to associate this\ncertificate with the appropriate application provisioning profile.</p>\n\n<h3 id='native_provisioning-section-exporting-developer-certificate-into-p12-format-from-keychain'>Exporting Developer Certificate into P12 Format from Keychain</h3>\n\n<p>Prerequisites:</p>\n\n<ul>\n<li>iOS development certificate from the Apple iOS Provisioning Portal</li>\n<li>Private key file (e.g. myprivatekey.key) used to generate the development certificate</li>\n</ul>\n\n\n<p>Perform the following steps to create the p12 file that combines the development certificate with your private key:</p>\n\n<ol>\n<li>Download and save the development certificate (ios_development.cer) from the Apple iOS Provisioning Portal.</li>\n<li>Convert the development certificate into a PEM file using the following command:\n<code>openssl x509 –in ios_development.cer –inform DER –out ios_development.pem –outform PEM</code></li>\n<li>Generate the P12 file:\n<code>openssl pkcs12 –export –inkey myprivatekey.key –in ios_development.pem –out ios_development.p12</code></li>\n<li>This file is what you specify in the Sencha SDK packager config file for the \"certificatePath\" variable.</li>\n</ol>\n\n\n<p>If you have generated the development certificate (ios_development.cer) from a Mac before, you need to use the\nprivate key from the Mac Keychain instead of the key (for example myprivatekey.key) generated using openssl.\nYou can replace step 3 above with the following steps:</p>\n\n<ol>\n<li>Export the private key as a P12 file (for example myprivatekey.p12) from the Keychain Access application from the Mac.</li>\n<li>Convert this key into a PEM key:\n<code>openssl pkcs12 –nocerts –in myprivatekey.p12 –out myprivatekey.pem</code></li>\n<li>Generate the p12 file:\n<code>openssl pkcs12 –export –inkey myprivatekey.pem –in ios_development.pem –out ios_development.p12</code></li>\n</ol>\n\n","title":"Native iOS Provisioning"});